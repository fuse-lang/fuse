---
source: crates/fuse-parser/tests/cases/mod.rs
description: "Test { first: \"hello\", second, ...third }\n"
expression: tokens
input_file: crates/fuse-parser/tests/cases/pass/struct-construction-02/case.fuse
---
[
  TokenReference(
    token: Token(
      span: Span(
        start: 0,
        end: 4,
      ),
      kind: Identifier,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 4,
          end: 5,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 5,
        end: 6,
      ),
      kind: LCurly,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 6,
          end: 7,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 7,
        end: 12,
      ),
      kind: Identifier,
    ),
    leading_trivia: [],
    trailing_trivia: [],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 12,
        end: 13,
      ),
      kind: Colon,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 13,
          end: 14,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 14,
        end: 21,
      ),
      kind: StringLiteral,
    ),
    leading_trivia: [],
    trailing_trivia: [],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 21,
        end: 22,
      ),
      kind: Comma,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 22,
          end: 23,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 23,
        end: 29,
      ),
      kind: Identifier,
    ),
    leading_trivia: [],
    trailing_trivia: [],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 29,
        end: 30,
      ),
      kind: Comma,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 30,
          end: 31,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 31,
        end: 34,
      ),
      kind: Dot3,
    ),
    leading_trivia: [],
    trailing_trivia: [],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 34,
        end: 39,
      ),
      kind: Identifier,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 39,
          end: 40,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 40,
        end: 41,
      ),
      kind: RCurly,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 41,
          end: 42,
        ),
        kind: Whitespace,
      ),
    ],
  ),
]
