---
source: crates/fuse-parser/tests/cases/mod.rs
expression: tokens
input_file: crates/fuse-parser/tests/cases/pass/if-expression-03/case.fuse
---
[
  TokenReference(
    token: Token(
      span: Span(
        start: 0,
        end: 2,
      ),
      kind: If,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 2,
          end: 3,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 3,
        end: 8,
      ),
      kind: Identifier,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 8,
          end: 9,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 9,
        end: 13,
      ),
      kind: Then,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 13,
          end: 15,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 15,
        end: 25,
      ),
      kind: StringLiteral,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 25,
          end: 26,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 26,
        end: 32,
      ),
      kind: ElseIf,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 32,
          end: 33,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 33,
        end: 38,
      ),
      kind: Identifier,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 38,
          end: 39,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 39,
        end: 43,
      ),
      kind: Then,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 43,
          end: 45,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 45,
        end: 59,
      ),
      kind: StringLiteral,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 59,
          end: 60,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 60,
        end: 64,
      ),
      kind: Else,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 64,
          end: 66,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 66,
        end: 78,
      ),
      kind: StringLiteral,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 78,
          end: 79,
        ),
        kind: Whitespace,
      ),
    ],
  ),
  TokenReference(
    token: Token(
      span: Span(
        start: 79,
        end: 82,
      ),
      kind: End,
    ),
    leading_trivia: [],
    trailing_trivia: [
      Token(
        span: Span(
          start: 82,
          end: 83,
        ),
        kind: Whitespace,
      ),
    ],
  ),
]
