---
source: crates/fuse-parser/tests/cases/mod.rs
description: "x = 1 + 2 * 3 - 4 / 5\n"
expression: parsed.chunk
input_file: crates/fuse-parser/tests/cases/pass/binary-operator-04/case.fuse
---
Some(Chunk(
  span: Span(
    start: 0,
    end: 22,
  ),
  body: Block(
    statements: [
      Expression(BinaryOperator(BinaryOperator(
        kind: Assignment(Span(
          start: 2,
          end: 3,
        )),
        lhs: Identifier(Identifier(
          span: Span(
            start: 0,
            end: 1,
          ),
          name: Atom("x"),
        )),
        rhs: BinaryOperator(BinaryOperator(
          kind: Minus(Span(
            start: 14,
            end: 15,
          )),
          lhs: BinaryOperator(BinaryOperator(
            kind: Plus(Span(
              start: 6,
              end: 7,
            )),
            lhs: Literal(Number(NumberLiteral(
              span: Span(
                start: 4,
                end: 5,
              ),
              raw: Atom("1"),
              value: 1.0,
              kind: Decimal,
            ))),
            rhs: BinaryOperator(BinaryOperator(
              kind: Multiply(Span(
                start: 10,
                end: 11,
              )),
              lhs: Literal(Number(NumberLiteral(
                span: Span(
                  start: 8,
                  end: 9,
                ),
                raw: Atom("2"),
                value: 2.0,
                kind: Decimal,
              ))),
              rhs: Literal(Number(NumberLiteral(
                span: Span(
                  start: 12,
                  end: 13,
                ),
                raw: Atom("3"),
                value: 3.0,
                kind: Decimal,
              ))),
            )),
          )),
          rhs: BinaryOperator(BinaryOperator(
            kind: Division(Span(
              start: 18,
              end: 19,
            )),
            lhs: Literal(Number(NumberLiteral(
              span: Span(
                start: 16,
                end: 17,
              ),
              raw: Atom("4"),
              value: 4.0,
              kind: Decimal,
            ))),
            rhs: Literal(Number(NumberLiteral(
              span: Span(
                start: 20,
                end: 21,
              ),
              raw: Atom("5"),
              value: 5.0,
              kind: Decimal,
            ))),
          )),
        )),
      ))),
    ],
  ),
))
